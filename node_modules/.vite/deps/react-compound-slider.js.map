{
  "version": 3,
  "sources": ["../../d3-array/src/ascending.js", "../../d3-array/src/bisector.js", "../../d3-array/src/number.js", "../../d3-array/src/bisect.js", "../../d3-array/src/array.js", "../../d3-array/src/ticks.js", "../../d3-array/src/shuffle.js", "../../react-compound-slider/src/Slider/utils.ts", "../../react-compound-slider/src/Slider/modes.ts", "../../react-compound-slider/src/utils.ts", "../../react-compound-slider/src/Rail/Rail.tsx", "../../react-compound-slider/src/Handles/Handles.tsx", "../../react-compound-slider/src/scales/LinearScale.ts", "../../react-compound-slider/src/Ticks/Ticks.tsx", "../../react-compound-slider/src/Tracks/Tracks.tsx", "../../react-compound-slider/src/scales/DiscreteScale.ts", "../../react-compound-slider/src/Slider/Slider.tsx"],
  "sourcesContent": ["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n", "export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: ReadonlyArray<number> = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n", "import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n", "export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n", "import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { RailProps } from './types';\n\nconst NOOP = () => ({ value: 0, percent: 0 });\n\nexport class Rail extends Component<RailProps> {\n  getRailProps = (props: OtherProps = {}) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      getEventData: getEventData || NOOP,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { OtherProps } from '../types';\nimport { HandlesProps } from './types';\n\nexport class Handles extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props: OtherProps = {}) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        (e: React.KeyboardEvent<Element>) => emitKeyboard && emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        (e: React.MouseEvent) => emitMouse && emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        (e: React.TouchEvent<Element>) => emitTouch && emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    const { domain, range } = this;\n\n    return (\n      this.interpolator ||\n      (this.interpolator = this.createInterpolator(domain, range))\n    )(+x);\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getRange() {\n    return this.range;\n  }\n\n  getTicks(count: number) {\n    const d = this.domain;\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n}\n", "import React, { Component } from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Ticks extends Component<TicksProps> {\n  public render() {\n    const {\n      children,\n      values,\n      scale = new LinearScale(),\n      count = 10,\n      getEventData = defaultGetEventData,\n      activeHandleID = '',\n    } = this.props;\n\n    const ticks = (values ? values : scale.getTicks(count)).map((value) => ({\n      id: `$$-${value}`,\n      value,\n      percent: scale.getValue(value),\n    }));\n\n    const renderedChildren = children({ getEventData, activeHandleID, ticks });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n", "function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n", "import React, { PureComponent, isValidElement } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode) => {\n  if (!isValidElement(item)) {\n    return false;\n  }\n\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: ReadonlyArray<number>,\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nconst defaultDomain = [0, 100];\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: defaultDomain,\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = defaultDomain,\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new DiscreteScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.domain === defaultDomain ||\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n      valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain === defaultDomain ? [...domain] : domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map((d) => d.val));\n        onChange(handles.map((d) => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map((v) =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find((value) => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map((d) => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      document.addEventListener('touchmove', this.onTouchMove);\n      document.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map((d) => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map((d) => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map((d) => d.val));\n    onSlideEnd(\n      handles.map((d) => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, (child) => {\n      if (isRCSComponent(child) === true) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["compare", "count", "reverse", "array", "prfx", "getSortByVal", "reversed", "sortByVal", "a", "b", "val", "getUpdatedHandles", "handles", "updateKey", "updateValue", "index", "findIndex", "v", "key", "slice", "sort", "getSliderDomain", "slider", "vertical", "s", "getBoundingClientRect", "d0", "top", "left", "d1", "bottom", "right", "isNotValidTouch", "type", "touches", "length", "toLowerCase", "getTouchPosition", "e", "clientY", "pageX", "getHandles", "values", "valueToStep", "warn", "changes", "map", "x", "getValue", "warning", "i", "mode1", "_", "next", "mode2", "curr", "mode3", "step", "indexForMovingHandle", "handleMoveIsPositive", "c", "n", "increment", "n0", "n1", "newStep", "clone", "check", "callAll", "fns", "forEach", "fn", "NOOP", "value", "percent", "Rail", "getRailProps", "props", "emitMouse", "emitTouch", "_objectSpread", "onMouseDown", "onTouchStart", "getEventData", "activeHandleID", "children", "renderedChildren", "React", "Children", "only", "Component", "Handles", "autofocus", "target", "HTMLElement", "focus", "getHandleProps", "id", "emitKeyboard", "onKeyDown", "LinearScale", "interpolator", "domain", "range", "r0", "r1", "interpolateValue", "deinterpolateValue", "t", "createInterpolator", "rescale", "count", "d", "ticks", "defaultGetEventData", "Ticks", "scale", "getTicks", "Tracks", "getTrackProps", "getDomain", "tracks", "source", "push", "clamp", "min", "max", "Math", "DiscreteScale", "setDomain", "setRange", "setStep", "p", "round", "isBrowser", "window", "document", "noop", "compare", "m", "equal", "reduce", "isRCSComponent", "item", "isValidElement", "name", "getNextValue", "newVal", "getPrevValue", "defaultDomain", "Slider", "state", "valueToPerc", "pixelToStep", "createRef", "handleID", "validUpKeys", "validDownKeys", "keyCode", "concat", "includes", "stopPropagation", "preventDefault", "found", "find", "currVal", "nextHandles", "submitUpdate", "onStart", "isTouch", "current", "TouchEvent", "MouseEvent", "onMouseMove", "onTouchMove", "onMouseUp", "onChange", "onSlideEnd", "setState", "removeEventListener", "onTouchEnd", "removeListeners", "onSlideStart", "addTouchEvents", "addMouseEvents", "handleRailAndTrackClicks", "minDiff", "Infinity", "diff", "abs", "addEventListener", "callOnChange", "mode", "onUpdate", "Array", "isArray", "className", "rootStyle", "rootProps", "component", "Comp", "disabled", "flatten", "mappedHandles", "child", "cloneElement", "createElement", "style", "ref", "nextProps", "prevState", "warnOnChanges", "nextState", "undefined", "Object", "keys", "PureComponent"]
}
